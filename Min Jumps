//Minimum jumps to reach end
/*Given an array of integers where each element represents
* the max number of steps that can be made forward from that element
* Program should return min jumps to reach end of array
*/

const int inf = 1e9;
#define FIO ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define test ll t; cin>>t; while(t--)
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    // freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
    
    int n; cin >> n;
    vi arr(n);
    for (auto& i : arr) cin >> i;
    vi jumps(n, inf);
    if (arr[0] == 0) {
        cout << inf << " "; return 0;
    }
    jumps[0] = 0;
    for (int i = 1; i < n; i++) {
        for (int j = 0; j < i; j++) {
            if (i <= (j + arr[j])) {
                jumps[i] = min(jumps[i], jumps[j] + 1);
            }
        }
    }
    cout << jumps[n - 1];

    return 0;
}
