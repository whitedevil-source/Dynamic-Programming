// Nth Fibonacci number
const int N = 1e5 + 2, MOD = 1e9 + 7;
int dp[N];
//Memoization:
int fib(int n) {
    if (n == 0) return 0;
    if (n == 1) return 0;
    if (n == 2) return 1;

    if (dp[n] != -1) return dp[n];
    dp[n] = fib(n - 1) + fib(n - 2);
    return dp[n];
}

#define FIO ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define test ll t; cin>>t; while(t--)
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    // freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
    
    rep(i, N)  dp[i] = -1;
    //Tabulation
    int n; cin >> n;
    vi DP(n + 1);
    DP[0] = 0;
    DP[1] = 0;
    DP[2] = 1;
    for (int i = 3; i <= n; i++) {
        DP[i] = DP[i - 1] + DP[i - 2];
    }
    cout << DP[n] << endl;

    return 0;
}
