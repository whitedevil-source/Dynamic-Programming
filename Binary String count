//Count number of binary strings
/*Given a positive integer N, count all possible distinct binary strings
* of length N such that there are no consecutive 1's
*/
/*recurrence
* at length i,
* we have one[1...i-1],zero[1....i-1]
* one[i]=zero[i-1]
* zero[i]=one[i-1]+zero[i-1]
* one[i-1]=zero[i-2]
* zero[i]=zero[i-1]+zero[i-2]
* answer=zero[i]+one[i]=zero[i+1]=fibo[n+1]
*/

#define FIO ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define test ll t; cin>>t; while(t--)
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    // freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
    
    int n; cin >> n;
    vi fib(n + 2, 0);
    fib[0] = 1; fib[1] = 1;
    for (int i = 2; i <= n; i++) {
        fib[i] = fib[i - 1] + fib[i - 2];
    }
    cout << fib[n + 1];

    return 0;
}

