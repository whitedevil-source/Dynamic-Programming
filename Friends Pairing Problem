//Friends Pairing Problem:
/*Given n friends, each one can remain single or can be paired
up with some other friend, Each friend can be paired only once.
Find out the total number of ways in which friends can be paired
up or remain single
*/
/*IDEA:
* Let f(n) = ways n people can remain single or pair up.
* For nth person there are two choices:
* 1. nth person remains single, we recur for f(n-1)
* 2. nth person pairs up with any of the remaining n-1 persons. we get (n-1)*f(n-2)
* f(n)=f(n-1)+(n-1)*f(n-2)
*/

#define FIO ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define test ll t; cin>>t; while(t--)
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    // freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
    
    int n; cin >> n;
    vi dp(n + 1, 0);
    dp[0] = 1; dp[1] = 1;
    for (int i = 2; i <= n; i++) {
        dp[i] = dp[i - 1] + (i - 1) * dp[i - 2];
    }
    cout << dp[n];

    return 0;
}
